/*
 * generated by Xtext 2.30.0
 */
grammar InternalFeatureLang;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.tud.st.featurelang.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.tud.st.featurelang.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.tud.st.featurelang.services.FeatureLangGrammarAccess;

}
@parser::members {
	private FeatureLangGrammarAccess grammarAccess;

	public void setGrammarAccess(FeatureLangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleFeatureRequest
entryRuleFeatureRequest
:
{ before(grammarAccess.getFeatureRequestRule()); }
	 ruleFeatureRequest
{ after(grammarAccess.getFeatureRequestRule()); } 
	 EOF 
;

// Rule FeatureRequest
ruleFeatureRequest 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureRequestAccess().getStatementsAssignment()); }
		(rule__FeatureRequest__StatementsAssignment)*
		{ after(grammarAccess.getFeatureRequestAccess().getStatementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getGroup()); }
		(rule__Statement__Group__0)
		{ after(grammarAccess.getStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChangeStatement
entryRuleChangeStatement
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getChangeStatementRule()); }
	 ruleChangeStatement
{ after(grammarAccess.getChangeStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ChangeStatement
ruleChangeStatement 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChangeStatementAccess().getGroup()); }
		(rule__ChangeStatement__Group__0)
		{ after(grammarAccess.getChangeStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleCreationStatement
entryRuleCreationStatement
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getCreationStatementRule()); }
	 ruleCreationStatement
{ after(grammarAccess.getCreationStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CreationStatement
ruleCreationStatement 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreationStatementAccess().getGroup()); }
		(rule__CreationStatement__Group__0)
		{ after(grammarAccess.getCreationStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleAction
entryRuleAction
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Action
ruleAction 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getTypeAssignment()); }
		(rule__Action__TypeAssignment)
		{ after(grammarAccess.getActionAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleUpdateAction
entryRuleUpdateAction
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getUpdateActionRule()); }
	 ruleUpdateAction
{ after(grammarAccess.getUpdateActionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UpdateAction
ruleUpdateAction 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateActionAccess().getGroup()); }
		(rule__UpdateAction__Group__0)
		{ after(grammarAccess.getUpdateActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleAttributeAction
entryRuleAttributeAction
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getAttributeActionRule()); }
	 ruleAttributeAction
{ after(grammarAccess.getAttributeActionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AttributeAction
ruleAttributeAction 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeActionAccess().getGroup()); }
		(rule__AttributeAction__Group__0)
		{ after(grammarAccess.getAttributeActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleAssociationAction
entryRuleAssociationAction
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getAssociationActionRule()); }
	 ruleAssociationAction
{ after(grammarAccess.getAssociationActionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AssociationAction
ruleAssociationAction 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssociationActionAccess().getGroup()); }
		(rule__AssociationAction__Group__0)
		{ after(grammarAccess.getAssociationActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleInheritanceAction
entryRuleInheritanceAction
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getInheritanceActionRule()); }
	 ruleInheritanceAction
{ after(grammarAccess.getInheritanceActionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InheritanceAction
ruleInheritanceAction 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInheritanceActionAccess().getGroup()); }
		(rule__InheritanceAction__Group__0)
		{ after(grammarAccess.getInheritanceActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleClass
entryRuleClass
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Class
ruleClass 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassAccess().getGroup()); }
		(rule__Class__Group__0)
		{ after(grammarAccess.getClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleAttribute
entryRuleAttribute
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Attribute
ruleAttribute 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRulePriority
entryRulePriority
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getPriorityRule()); }
	 rulePriority
{ after(grammarAccess.getPriorityRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Priority
rulePriority 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPriorityAccess().getPriorityAssignment()); }
		(rule__Priority__PriorityAssignment)
		{ after(grammarAccess.getPriorityAccess().getPriorityAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Rule PriorityValue
rulePriorityValue
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPriorityValueAccess().getAlternatives()); }
		(rule__PriorityValue__Alternatives)
		{ after(grammarAccess.getPriorityValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Datatype
ruleDatatype
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDatatypeAccess().getAlternatives()); }
		(rule__Datatype__Alternatives)
		{ after(grammarAccess.getDatatypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getChangeStatementParserRuleCall_0_0()); }
		ruleChangeStatement
		{ after(grammarAccess.getStatementAccess().getChangeStatementParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getCreationStatementParserRuleCall_0_1()); }
		ruleCreationStatement
		{ after(grammarAccess.getStatementAccess().getCreationStatementParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeStatement__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeStatementAccess().getGroup_1_0()); }
		(rule__ChangeStatement__Group_1_0__0)
		{ after(grammarAccess.getChangeStatementAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getChangeStatementAccess().getUpdateAssignment_1_1()); }
		(rule__ChangeStatement__UpdateAssignment_1_1)
		{ after(grammarAccess.getChangeStatementAccess().getUpdateAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__TypeAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getTypeAttributeActionParserRuleCall_0_0()); }
		ruleAttributeAction
		{ after(grammarAccess.getActionAccess().getTypeAttributeActionParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getTypeAssociationActionParserRuleCall_0_1()); }
		ruleAssociationAction
		{ after(grammarAccess.getActionAccess().getTypeAssociationActionParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getTypeInheritanceActionParserRuleCall_0_2()); }
		ruleInheritanceAction
		{ after(grammarAccess.getActionAccess().getTypeInheritanceActionParserRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getTheKeyword_0_0()); }
		'the'
		{ after(grammarAccess.getClassAccess().getTheKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassAccess().getAKeyword_0_1()); }
		'a'
		{ after(grammarAccess.getClassAccess().getAKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PriorityValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPriorityValueAccess().getSHOULDEnumLiteralDeclaration_0()); }
		('should')
		{ after(grammarAccess.getPriorityValueAccess().getSHOULDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getPriorityValueAccess().getMUSTEnumLiteralDeclaration_1()); }
		('must')
		{ after(grammarAccess.getPriorityValueAccess().getMUSTEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Datatype__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDatatypeAccess().getWORDEnumLiteralDeclaration_0()); }
		('time')
		{ after(grammarAccess.getDatatypeAccess().getWORDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDatatypeAccess().getPHRASEEnumLiteralDeclaration_1()); }
		('phrase')
		{ after(grammarAccess.getDatatypeAccess().getPHRASEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDatatypeAccess().getNUMBEREnumLiteralDeclaration_2()); }
		('number')
		{ after(grammarAccess.getDatatypeAccess().getNUMBEREnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getAlternatives_0()); }
	(rule__Statement__Alternatives_0)
	{ after(grammarAccess.getStatementAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getFullStopKeyword_1()); }
	('.')?
	{ after(grammarAccess.getStatementAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeStatement__Group__0__Impl
	rule__ChangeStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeStatementAccess().getTargetAssignment_0()); }
	(rule__ChangeStatement__TargetAssignment_0)
	{ after(grammarAccess.getChangeStatementAccess().getTargetAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeStatementAccess().getAlternatives_1()); }
	(rule__ChangeStatement__Alternatives_1)
	{ after(grammarAccess.getChangeStatementAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeStatement__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeStatement__Group_1_0__0__Impl
	rule__ChangeStatement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeStatement__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeStatementAccess().getPriorityAssignment_1_0_0()); }
	(rule__ChangeStatement__PriorityAssignment_1_0_0)
	{ after(grammarAccess.getChangeStatementAccess().getPriorityAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeStatement__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeStatement__Group_1_0__1__Impl
	rule__ChangeStatement__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeStatement__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeStatementAccess().getNegationAssignment_1_0_1()); }
	(rule__ChangeStatement__NegationAssignment_1_0_1)?
	{ after(grammarAccess.getChangeStatementAccess().getNegationAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeStatement__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChangeStatement__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeStatement__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChangeStatementAccess().getActionAssignment_1_0_2()); }
	(rule__ChangeStatement__ActionAssignment_1_0_2)
	{ after(grammarAccess.getChangeStatementAccess().getActionAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreationStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreationStatement__Group__0__Impl
	rule__CreationStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreationStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreationStatementAccess().getItKeyword_0()); }
	'it'
	{ after(grammarAccess.getCreationStatementAccess().getItKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreationStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreationStatement__Group__1__Impl
	rule__CreationStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreationStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreationStatementAccess().getPriorityAssignment_1()); }
	(rule__CreationStatement__PriorityAssignment_1)
	{ after(grammarAccess.getCreationStatementAccess().getPriorityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreationStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreationStatement__Group__2__Impl
	rule__CreationStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreationStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreationStatementAccess().getNegationAssignment_2()); }
	(rule__CreationStatement__NegationAssignment_2)?
	{ after(grammarAccess.getCreationStatementAccess().getNegationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreationStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreationStatement__Group__3__Impl
	rule__CreationStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreationStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreationStatementAccess().getExistKeyword_3()); }
	'exist'
	{ after(grammarAccess.getCreationStatementAccess().getExistKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreationStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreationStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreationStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreationStatementAccess().getClassElementAssignment_4()); }
	(rule__CreationStatement__ClassElementAssignment_4)
	{ after(grammarAccess.getCreationStatementAccess().getClassElementAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateAction__Group__0__Impl
	rule__UpdateAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateActionAccess().getHasKeyword_0()); }
	'has'
	{ after(grammarAccess.getUpdateActionAccess().getHasKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateAction__Group__1__Impl
	rule__UpdateAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateActionAccess().getAnKeyword_1()); }
	'an'
	{ after(grammarAccess.getUpdateActionAccess().getAnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateAction__Group__2__Impl
	rule__UpdateAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateActionAccess().getExistingKeyword_2()); }
	'existing'
	{ after(grammarAccess.getUpdateActionAccess().getExistingKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateAction__Group__3__Impl
	rule__UpdateAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateActionAccess().getAttributeAssignment_3()); }
	(rule__UpdateAction__AttributeAssignment_3)
	{ after(grammarAccess.getUpdateActionAccess().getAttributeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateAction__Group__4__Impl
	rule__UpdateAction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateActionAccess().getFullStopKeyword_4()); }
	'.'
	{ after(grammarAccess.getUpdateActionAccess().getFullStopKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateAction__Group__5__Impl
	rule__UpdateAction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateActionAccess().getItKeyword_5()); }
	'it'
	{ after(grammarAccess.getUpdateActionAccess().getItKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateAction__Group__6__Impl
	rule__UpdateAction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateActionAccess().getPriorityAssignment_6()); }
	(rule__UpdateAction__PriorityAssignment_6)
	{ after(grammarAccess.getUpdateActionAccess().getPriorityAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateAction__Group__7__Impl
	rule__UpdateAction__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateActionAccess().getBeKeyword_7()); }
	'be'
	{ after(grammarAccess.getUpdateActionAccess().getBeKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateAction__Group__8__Impl
	rule__UpdateAction__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateActionAccess().getAKeyword_8()); }
	'a'
	{ after(grammarAccess.getUpdateActionAccess().getAKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateAction__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateActionAccess().getTypeAssignment_9()); }
	(rule__UpdateAction__TypeAssignment_9)
	{ after(grammarAccess.getUpdateActionAccess().getTypeAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeAction__Group__0__Impl
	rule__AttributeAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeActionAccess().getHaveKeyword_0()); }
	'have'
	{ after(grammarAccess.getAttributeActionAccess().getHaveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeAction__Group__1__Impl
	rule__AttributeAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeActionAccess().getTheKeyword_1()); }
	'the'
	{ after(grammarAccess.getAttributeActionAccess().getTheKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeAction__Group__2__Impl
	rule__AttributeAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeActionAccess().getAttributeAssignment_2()); }
	(rule__AttributeAction__AttributeAssignment_2)
	{ after(grammarAccess.getAttributeActionAccess().getAttributeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeAction__Group__3__Impl
	rule__AttributeAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeActionAccess().getFullStopKeyword_3()); }
	'.'
	{ after(grammarAccess.getAttributeActionAccess().getFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeAction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeActionAccess().getGroup_4()); }
	(rule__AttributeAction__Group_4__0)?
	{ after(grammarAccess.getAttributeActionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeAction__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeAction__Group_4__0__Impl
	rule__AttributeAction__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAction__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeActionAccess().getItKeyword_4_0()); }
	'it'
	{ after(grammarAccess.getAttributeActionAccess().getItKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAction__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeAction__Group_4__1__Impl
	rule__AttributeAction__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAction__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeActionAccess().getIsKeyword_4_1()); }
	'is'
	{ after(grammarAccess.getAttributeActionAccess().getIsKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAction__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeAction__Group_4__2__Impl
	rule__AttributeAction__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAction__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeActionAccess().getAKeyword_4_2()); }
	'a'
	{ after(grammarAccess.getAttributeActionAccess().getAKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAction__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeAction__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAction__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeActionAccess().getTypeAssignment_4_3()); }
	(rule__AttributeAction__TypeAssignment_4_3)
	{ after(grammarAccess.getAttributeActionAccess().getTypeAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationAction__Group__0__Impl
	rule__AssociationAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationActionAccess().getHaveKeyword_0()); }
	'have'
	{ after(grammarAccess.getAssociationActionAccess().getHaveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationAction__Group__1__Impl
	rule__AssociationAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationActionAccess().getAssociationsKeyword_1()); }
	'associations'
	{ after(grammarAccess.getAssociationActionAccess().getAssociationsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationAction__Group__2__Impl
	rule__AssociationAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationActionAccess().getToKeyword_2()); }
	'to'
	{ after(grammarAccess.getAssociationActionAccess().getToKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationAction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationAction__Group__3__Impl
	rule__AssociationAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationAction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationActionAccess().getTargetAssignment_3()); }
	(rule__AssociationAction__TargetAssignment_3)
	{ after(grammarAccess.getAssociationActionAccess().getTargetAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationAction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationAction__Group__4__Impl
	rule__AssociationAction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationAction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationActionAccess().getCalledKeyword_4()); }
	'called'
	{ after(grammarAccess.getAssociationActionAccess().getCalledKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationAction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssociationAction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationAction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationActionAccess().getRelationAssignment_5()); }
	(rule__AssociationAction__RelationAssignment_5)
	{ after(grammarAccess.getAssociationActionAccess().getRelationAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InheritanceAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InheritanceAction__Group__0__Impl
	rule__InheritanceAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritanceAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInheritanceActionAccess().getInheritKeyword_0()); }
	'inherit'
	{ after(grammarAccess.getInheritanceActionAccess().getInheritKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritanceAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InheritanceAction__Group__1__Impl
	rule__InheritanceAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritanceAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInheritanceActionAccess().getFromKeyword_1()); }
	'from'
	{ after(grammarAccess.getInheritanceActionAccess().getFromKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritanceAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InheritanceAction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritanceAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInheritanceActionAccess().getParentAssignment_2()); }
	(rule__InheritanceAction__ParentAssignment_2)
	{ after(grammarAccess.getInheritanceActionAccess().getParentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getAlternatives_0()); }
	(rule__Class__Alternatives_0)?
	{ after(grammarAccess.getClassAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__1__Impl
	rule__Class__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getClassKeyword_1()); }
	('class')?
	{ after(grammarAccess.getClassAccess().getClassKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Class__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassAccess().getNameAssignment_2()); }
	(rule__Class__NameAssignment_2)
	{ after(grammarAccess.getClassAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAttributeKeyword_0()); }
	('attribute')?
	{ after(grammarAccess.getAttributeAccess().getAttributeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
	(rule__Attribute__NameAssignment_1)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureRequest__StatementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureRequestAccess().getStatementsStatementParserRuleCall_0()); }
		ruleStatement
		{ after(grammarAccess.getFeatureRequestAccess().getStatementsStatementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeStatement__TargetAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeStatementAccess().getTargetClassParserRuleCall_0_0()); }
		ruleClass
		{ after(grammarAccess.getChangeStatementAccess().getTargetClassParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeStatement__PriorityAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeStatementAccess().getPriorityPriorityParserRuleCall_1_0_0_0()); }
		rulePriority
		{ after(grammarAccess.getChangeStatementAccess().getPriorityPriorityParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeStatement__NegationAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeStatementAccess().getNegationNotKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getChangeStatementAccess().getNegationNotKeyword_1_0_1_0()); }
			'not'
			{ after(grammarAccess.getChangeStatementAccess().getNegationNotKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getChangeStatementAccess().getNegationNotKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeStatement__ActionAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeStatementAccess().getActionActionParserRuleCall_1_0_2_0()); }
		ruleAction
		{ after(grammarAccess.getChangeStatementAccess().getActionActionParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeStatement__UpdateAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChangeStatementAccess().getUpdateUpdateActionParserRuleCall_1_1_0()); }
		ruleUpdateAction
		{ after(grammarAccess.getChangeStatementAccess().getUpdateUpdateActionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreationStatement__PriorityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreationStatementAccess().getPriorityPriorityParserRuleCall_1_0()); }
		rulePriority
		{ after(grammarAccess.getCreationStatementAccess().getPriorityPriorityParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreationStatement__NegationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreationStatementAccess().getNegationNotKeyword_2_0()); }
		(
			{ before(grammarAccess.getCreationStatementAccess().getNegationNotKeyword_2_0()); }
			'not'
			{ after(grammarAccess.getCreationStatementAccess().getNegationNotKeyword_2_0()); }
		)
		{ after(grammarAccess.getCreationStatementAccess().getNegationNotKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreationStatement__ClassElementAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreationStatementAccess().getClassElementClassParserRuleCall_4_0()); }
		ruleClass
		{ after(grammarAccess.getCreationStatementAccess().getClassElementClassParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getTypeAlternatives_0()); }
		(rule__Action__TypeAlternatives_0)
		{ after(grammarAccess.getActionAccess().getTypeAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__AttributeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateActionAccess().getAttributeAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getUpdateActionAccess().getAttributeAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__PriorityAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateActionAccess().getPriorityPriorityParserRuleCall_6_0()); }
		rulePriority
		{ after(grammarAccess.getUpdateActionAccess().getPriorityPriorityParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateAction__TypeAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateActionAccess().getTypeDatatypeEnumRuleCall_9_0()); }
		ruleDatatype
		{ after(grammarAccess.getUpdateActionAccess().getTypeDatatypeEnumRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAction__AttributeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeActionAccess().getAttributeAttributeParserRuleCall_2_0()); }
		ruleAttribute
		{ after(grammarAccess.getAttributeActionAccess().getAttributeAttributeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAction__TypeAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeActionAccess().getTypeDatatypeEnumRuleCall_4_3_0()); }
		ruleDatatype
		{ after(grammarAccess.getAttributeActionAccess().getTypeDatatypeEnumRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationAction__TargetAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationActionAccess().getTargetClassParserRuleCall_3_0()); }
		ruleClass
		{ after(grammarAccess.getAssociationActionAccess().getTargetClassParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationAction__RelationAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationActionAccess().getRelationIDTerminalRuleCall_5_0()); }
		RULE_ID
		{ after(grammarAccess.getAssociationActionAccess().getRelationIDTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritanceAction__ParentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInheritanceActionAccess().getParentClassParserRuleCall_2_0()); }
		ruleClass
		{ after(grammarAccess.getInheritanceActionAccess().getParentClassParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Priority__PriorityAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPriorityAccess().getPriorityPriorityValueEnumRuleCall_0()); }
		rulePriorityValue
		{ after(grammarAccess.getPriorityAccess().getPriorityPriorityValueEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
