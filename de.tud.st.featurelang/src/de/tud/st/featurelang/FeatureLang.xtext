grammar de.tud.st.featurelang.FeatureLang with org.eclipse.xtext.common.Terminals

generate featureLang "http://www.tud.de/st/featurelang/FeatureLang"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

FeatureRequest:
	(statements+= Statement)*;
	
Statement:
	(ChangeStatement | CreationStatement) ('.')?
;
	
ChangeStatement hidden(WS):
	((target=Class 
	(priority=Priority (negation ?= 'not')?)?) | (('set' | 'change' | negation ?= 'remove') 'in' target=Class))
	(action=Action | update=UpdateAction) 
;	

CreationStatement hidden(WS):
	((classElement=Class priority=Priority (negation ?= 'not')? ('exist' | 'be')) | 
		('create' | negation ?= 'delete') classElement=Class) 
;

Action hidden(WS):
	type=(AttributeAction | AssociationAction | InheritanceAction | CompositionAction)
;

UpdateAction hidden(WS):
	('has')? ('an' | 'a' | 'the') ('existing' | 'created')
	attribute=Attribute '.' 'it' priority=Priority (datatype=UpdateAttributeDatatype | 
													identifier=UpdateAttributeIdentifier |
													value=UpdateAttributeValue
	)
;

UpdateAttributeDatatype hidden (WS):
	'be' 'a' type=Datatype 'instead' 'of' oldType=Datatype
;

UpdateAttributeIdentifier hidden (WS):
	'have' ('a' | 'an')? identifier=Identifier 'instead' 'of' oldIdentifier=Identifier
;

UpdateAttributeValue hidden (WS): 
	'have' ('a')? 'value' value=AttributeValue 'instead' 'of' oldValue=AttributeValue
;

AttributeAction hidden(WS):
	('have')? ('the' | 'an' | 'a') attribute=Attribute
	('.' 'it' 'is' 'a' type=Datatype)?
	('.' 'it' 'has' ('a')? 'value' value=AttributeValue)?
;

AssociationAction hidden(WS):
	('have')? ('associations' | 'association') (create=CreateAssociation | name=ID edit=EditAssociation) 
;

CreateAssociation hidden(WS):
	'to' ('other')? target=Class 'called' relation=ID
;

EditAssociation hidden(WS):
	type=(SetCompatible | SetVersionRange | SetVariant | SetRightOpen | SetLeftOpen)
;

SetCompatible hidden(WS):
	'compatible' 'with' 'version' name=DATE
;

SetVersionRange hidden(WS):
	'with' 'version' 'range' 'from' start=DATE 'to' end=DATE
;

SetVariant hidden(WS):
	'with' 'all' 'versions' 'of' 'variant' name=DATE
;

SetRightOpen hidden(WS):
	'up' 'to' 'date' date=DATE
;

SetLeftOpen hidden(WS):
	'starting' 'from' 'date' date=DATE
;
	
InheritanceAction hidden(WS):
	('inherit' | 'inheritance') 'from' parent=Class
;

CompositionAction hidden(WS):
	create=CreateComposition | edit=EditComposition
;

CreateComposition hidden(WS):
	('compose' | 'composition' 'to') target=Class 'called' relation=ID
	('.' 'it' priority=Priority 'be' publicity=Publicity)?
;

EditComposition hidden(WS):
	('have')? 'composition' compositionName=ID 'that' 'is' publicity=Publicity
;

Class hidden(WS):
	('the' | 'a')? (abstraction=Abstraction)? ('class')? name=ID
;

Attribute hidden(WS):
	('attribute')? name=ID
;

Identifier hidden(WS):
	value=IdentifierValue name=ID
;
	
Priority hidden(WS):
	priority=PriorityValue
;

AttributeValue:
	(ID ('\r')?)+ | INT | DATE
;

enum Publicity:
	PUBLIC='public' | PRIVATE='private'
;

enum PriorityValue:
	SHOULD='should' | MUST='must'
;

enum Abstraction:
	NEW='new' | ABSTRACTION='abstract'
;

enum IdentifierValue:
	NAME='name' | URI='URI'
;

enum Datatype:
	DEFAULT='DEFAULT' | WORD='time' | PHRASE='phrase' | NUMBER='number'
;

terminal DATE:
    INT '-' INT '-' INT
; 

    