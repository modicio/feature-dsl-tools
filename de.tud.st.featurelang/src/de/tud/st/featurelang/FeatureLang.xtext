grammar de.tud.st.featurelang.FeatureLang with org.eclipse.xtext.common.Terminals

generate featureLang "http://www.tud.de/st/featurelang/FeatureLang"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

FeatureRequest:
	(statements+= Statement)*;
	
Statement:
	(ChangeStatement | CreationStatement) ('.')?
;
	
ChangeStatement hidden(WS):
	target=Class
	((priority=Priority (negation ?= 'not')? (action=Action | 'have' ('a' | 'an')? identifier=Identifier)) | update=UpdateAction)
;	

CreationStatement hidden(WS):
	classElement=Class priority=Priority (negation ?= 'not')? ('exist' | 'be') 
;

Action hidden(WS):
	type=(AttributeAction | AssociationAction | InheritanceAction | CompositionAction)
;

UpdateAction hidden(WS):
	'has' ('an' | 'a') ('existing')?
	attribute=Attribute '.' 'it' priority=Priority (datatype=UpdateAttributeDatatype | 
													identifier=UpdateAttributeIdentifier |
													value=UpdateAttributeValue
	)
;

UpdateAttributeDatatype hidden (WS):
	'be' 'a' type=Datatype
;

UpdateAttributeIdentifier hidden (WS):
	'have' ('a' | 'an')? identifier=Identifier
;

UpdateAttributeValue hidden (WS): 
	'have' ('a')? 'value' value=ID
;

AttributeAction hidden(WS):
	'have' ('the' | 'an' | 'a') attribute=Attribute '.'
	('it' 'is' 'a' type=Datatype)?
;

AssociationAction hidden(WS):
	'have' ('associations' | 'association') (create=CreateAssociation | name=ID edit=EditAssociation) 
;

CreateAssociation hidden(WS):
	'to' ('other')? target=Class 'called' relation=ID
;

EditAssociation hidden(WS):
	type=(SetCompatible | SetVersionRange | SetVariant | SetRightOpen | SetLeftOpen)
;

SetCompatible hidden(WS):
	'compatible' 'with' 'version' name=ID
;

SetVersionRange hidden(WS):
	'with' 'version' 'range' 'from' start=ID 'to' end=ID
;

SetVariant hidden(WS):
	'with' 'all' 'versions' 'of' 'variant' name=ID
;

SetRightOpen hidden(WS):
	'up' 'to' 'date' date=ID
;

SetLeftOpen hidden(WS):
	'starting' 'from' 'date' date=ID
;
	
InheritanceAction hidden(WS):
	create=CreateInheritance | edit=EditInheritance
;

CreateInheritance hidden(WS):
	'inherit' 'from' parent=Class
;

EditInheritance hidden(WS):
	'have' 'inheritance' 'URI' uri=ID
;

CompositionAction hidden(WS):
	create=CreateComposition | edit=EditComposition
;

CreateComposition hidden(WS):
	'compose' target=Class 'called' relation=ID '.'
	('it' priority=Priority 'be' publicity=Publicity)?
;

EditComposition hidden(WS):
	'have' 'composition' compositionName=ID 'with' parameter=CompositionParameter name=ID
;

Class hidden(WS):
	('the' | 'a')? (abstract=Abstraction)? ('class')? name=ID
;

Attribute hidden(WS):
	('attribute')? name=ID
;

Identifier hidden(WS):
	value=IdentifierValue name=ID
;
	
Priority hidden(WS):
	priority=PriorityValue
;

enum CompositionParameter:
	URI='URI' | ROLE='role' | TARGET='target'
;

enum Publicity:
	PUBLIC='public' | PRIVATE='private'
;

enum PriorityValue:
	SHOULD='should' | MUST='must'
;

enum Abstraction:
	ABSTRACT='abstract'
;

enum IdentifierValue:
	NAME='name' | URI='URI'
;

enum Datatype:
	WORD='time' | PHRASE='phrase' | NUMBER='number'
;